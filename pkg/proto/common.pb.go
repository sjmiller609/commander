// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto1.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type PingResponse struct {
	Received int64 `protobuf:"varint,1,opt,name=received" json:"received,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto1.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *PingResponse) GetReceived() int64 {
	if m != nil {
		return m.Received
	}
	return 0
}

type UUID struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *UUID) Reset()                    { *m = UUID{} }
func (m *UUID) String() string            { return proto1.CompactTextString(m) }
func (*UUID) ProtoMessage()               {}
func (*UUID) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *UUID) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Env struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Env) Reset()                    { *m = Env{} }
func (m *Env) String() string            { return proto1.CompactTextString(m) }
func (*Env) ProtoMessage()               {}
func (*Env) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Env) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Env) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type EnvSecret struct {
	Key  string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *EnvSecret) Reset()                    { *m = EnvSecret{} }
func (m *EnvSecret) String() string            { return proto1.CompactTextString(m) }
func (*EnvSecret) ProtoMessage()               {}
func (*EnvSecret) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *EnvSecret) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *EnvSecret) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Secret struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Key   string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *Secret) Reset()                    { *m = Secret{} }
func (m *Secret) String() string            { return proto1.CompactTextString(m) }
func (*Secret) ProtoMessage()               {}
func (*Secret) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *Secret) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Secret) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Secret) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Result struct {
	Success bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto1.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *Result) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Result) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Chart struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
}

func (m *Chart) Reset()                    { *m = Chart{} }
func (m *Chart) String() string            { return proto1.CompactTextString(m) }
func (*Chart) ProtoMessage()               {}
func (*Chart) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *Chart) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Chart) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type Deployment struct {
	ReleaseName string `protobuf:"bytes,1,opt,name=release_name,json=releaseName" json:"release_name,omitempty"`
	Info        string `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
}

func (m *Deployment) Reset()                    { *m = Deployment{} }
func (m *Deployment) String() string            { return proto1.CompactTextString(m) }
func (*Deployment) ProtoMessage()               {}
func (*Deployment) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *Deployment) GetReleaseName() string {
	if m != nil {
		return m.ReleaseName
	}
	return ""
}

func (m *Deployment) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func init() {
	proto1.RegisterType((*PingRequest)(nil), "commander.PingRequest")
	proto1.RegisterType((*PingResponse)(nil), "commander.PingResponse")
	proto1.RegisterType((*UUID)(nil), "commander.UUID")
	proto1.RegisterType((*Env)(nil), "commander.Env")
	proto1.RegisterType((*EnvSecret)(nil), "commander.EnvSecret")
	proto1.RegisterType((*Secret)(nil), "commander.Secret")
	proto1.RegisterType((*Result)(nil), "commander.Result")
	proto1.RegisterType((*Chart)(nil), "commander.Chart")
	proto1.RegisterType((*Deployment)(nil), "commander.Deployment")
}

func init() { proto1.RegisterFile("common.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x49, 0xf3, 0xaf, 0x99, 0x46, 0x90, 0xc5, 0x43, 0x10, 0x0f, 0xba, 0x27, 0x11, 0x14,
	0x44, 0xbc, 0x79, 0xb2, 0xe9, 0xc1, 0x8b, 0x48, 0xa4, 0x17, 0x2f, 0xb2, 0xa6, 0x63, 0x0d, 0x26,
	0xbb, 0x71, 0x27, 0x09, 0xf4, 0xdb, 0x4b, 0xb6, 0xd9, 0x36, 0x87, 0x9c, 0x76, 0x7e, 0xfb, 0xde,
	0xbc, 0x99, 0x65, 0x21, 0xce, 0x55, 0x55, 0x29, 0x79, 0x57, 0x6b, 0xd5, 0x28, 0x16, 0xf5, 0x24,
	0xe4, 0x06, 0x35, 0x3f, 0x81, 0xc5, 0x5b, 0x21, 0xb7, 0x19, 0xfe, 0xb5, 0x48, 0x0d, 0xbf, 0x81,
	0x78, 0x8f, 0x54, 0x2b, 0x49, 0xc8, 0xce, 0x61, 0xae, 0x31, 0xc7, 0xa2, 0xc3, 0x4d, 0xe2, 0x5c,
	0x3a, 0xd7, 0x6e, 0x76, 0x60, 0x7e, 0x01, 0xde, 0x7a, 0xfd, 0x92, 0xb2, 0x33, 0xf0, 0x3b, 0x51,
	0xb6, 0x68, 0x0c, 0x51, 0xb6, 0x07, 0x7e, 0x0b, 0xee, 0x4a, 0x76, 0xec, 0x14, 0xdc, 0x5f, 0xdc,
	0x0d, 0x52, 0x5f, 0x1e, 0xed, 0xb3, 0xb1, 0xfd, 0x1e, 0xa2, 0x95, 0xec, 0xde, 0x31, 0xd7, 0xd8,
	0x4c, 0x34, 0x31, 0xf0, 0xa4, 0xa8, 0x6c, 0x8f, 0xa9, 0x79, 0x0a, 0xc1, 0xe0, 0xb7, 0xaa, 0x73,
	0x54, 0x6d, 0xc6, 0x6c, 0x62, 0xb0, 0x3b, 0x1e, 0xfc, 0x04, 0x41, 0x86, 0xd4, 0x96, 0x0d, 0x4b,
	0x20, 0xa4, 0x36, 0xcf, 0x91, 0xc8, 0x04, 0xcd, 0x33, 0x8b, 0xbd, 0x52, 0x21, 0x91, 0xd8, 0xda,
	0x05, 0x2c, 0xf2, 0x47, 0xf0, 0x97, 0x3f, 0x42, 0x4f, 0xaf, 0x90, 0x40, 0xd8, 0xa1, 0xa6, 0x42,
	0x49, 0xdb, 0x36, 0x20, 0x5f, 0x02, 0xa4, 0x58, 0x97, 0x6a, 0x57, 0xa1, 0x6c, 0xd8, 0x15, 0xc4,
	0x1a, 0x4b, 0x14, 0x84, 0x9f, 0xa3, 0x8c, 0xc5, 0x70, 0xf7, 0xda, 0x47, 0x31, 0xf0, 0x0a, 0xf9,
	0xad, 0xec, 0xfb, 0xfb, 0xfa, 0x39, 0xfc, 0xf0, 0xcd, 0x77, 0x7e, 0x05, 0xe6, 0x78, 0xf8, 0x0f,
	0x00, 0x00, 0xff, 0xff, 0xed, 0xa3, 0xb3, 0xb1, 0xe5, 0x01, 0x00, 0x00,
}
