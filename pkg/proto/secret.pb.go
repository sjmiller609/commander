// Code generated by protoc-gen-go. DO NOT EDIT.
// source: secret.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetSecretRequest struct {
	Namespace string `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *GetSecretRequest) Reset()                    { *m = GetSecretRequest{} }
func (m *GetSecretRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetSecretRequest) ProtoMessage()               {}
func (*GetSecretRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *GetSecretRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetSecretRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetSecretResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Secret *Secret `protobuf:"bytes,2,opt,name=secret" json:"secret,omitempty"`
}

func (m *GetSecretResponse) Reset()                    { *m = GetSecretResponse{} }
func (m *GetSecretResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetSecretResponse) ProtoMessage()               {}
func (*GetSecretResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *GetSecretResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetSecretResponse) GetSecret() *Secret {
	if m != nil {
		return m.Secret
	}
	return nil
}

type SetSecretRequest struct {
	ReleaseName string  `protobuf:"bytes,1,opt,name=release_name,json=releaseName" json:"release_name,omitempty"`
	Namespace   string  `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Secret      *Secret `protobuf:"bytes,5,opt,name=secret" json:"secret,omitempty"`
}

func (m *SetSecretRequest) Reset()                    { *m = SetSecretRequest{} }
func (m *SetSecretRequest) String() string            { return proto1.CompactTextString(m) }
func (*SetSecretRequest) ProtoMessage()               {}
func (*SetSecretRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *SetSecretRequest) GetReleaseName() string {
	if m != nil {
		return m.ReleaseName
	}
	return ""
}

func (m *SetSecretRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *SetSecretRequest) GetSecret() *Secret {
	if m != nil {
		return m.Secret
	}
	return nil
}

type SetSecretResponse struct {
	Result *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *SetSecretResponse) Reset()                    { *m = SetSecretResponse{} }
func (m *SetSecretResponse) String() string            { return proto1.CompactTextString(m) }
func (*SetSecretResponse) ProtoMessage()               {}
func (*SetSecretResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *SetSecretResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto1.RegisterType((*GetSecretRequest)(nil), "commander.GetSecretRequest")
	proto1.RegisterType((*GetSecretResponse)(nil), "commander.GetSecretResponse")
	proto1.RegisterType((*SetSecretRequest)(nil), "commander.SetSecretRequest")
	proto1.RegisterType((*SetSecretResponse)(nil), "commander.SetSecretResponse")
}

func init() { proto1.RegisterFile("secret.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x4d, 0x2e,
	0x4a, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4c, 0xce, 0xcf, 0xcd, 0x4d, 0xcc,
	0x4b, 0x49, 0x2d, 0x92, 0xe2, 0x01, 0x31, 0xf3, 0xf3, 0x20, 0x12, 0x4a, 0x2e, 0x5c, 0x02, 0xee,
	0xa9, 0x25, 0xc1, 0x60, 0xb5, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x32, 0x5c, 0x9c,
	0x79, 0x89, 0xb9, 0xa9, 0xc5, 0x05, 0x89, 0xc9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41,
	0x08, 0x01, 0x21, 0x21, 0x2e, 0x16, 0x10, 0x47, 0x82, 0x09, 0x2c, 0x01, 0x66, 0x2b, 0x65, 0x72,
	0x09, 0x22, 0x99, 0x52, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0xa4, 0xc9, 0xc5, 0x56, 0x94, 0x5a,
	0x5c, 0x9a, 0x53, 0x02, 0x36, 0x83, 0xdb, 0x48, 0x50, 0x0f, 0xee, 0x08, 0xbd, 0x20, 0xb0, 0x44,
	0x10, 0x54, 0x01, 0x48, 0x29, 0xc4, 0xb9, 0x60, 0x53, 0x51, 0x95, 0x42, 0x4d, 0x85, 0x2a, 0x50,
	0xaa, 0xe3, 0x12, 0x08, 0x46, 0x77, 0xb0, 0x22, 0x17, 0x4f, 0x51, 0x6a, 0x4e, 0x6a, 0x62, 0x71,
	0x6a, 0x3c, 0xd8, 0x69, 0x10, 0x37, 0x73, 0x43, 0xc5, 0xfc, 0x12, 0x73, 0x53, 0x51, 0xfd, 0xc4,
	0x84, 0xee, 0x27, 0x84, 0xfd, 0xac, 0x84, 0xec, 0xb7, 0xe3, 0x12, 0x0c, 0xa6, 0xc0, 0xab, 0x4e,
	0xec, 0x51, 0xac, 0xe0, 0x90, 0x4f, 0x62, 0x03, 0x53, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x8f, 0x68, 0x5e, 0xd2, 0xa9, 0x01, 0x00, 0x00,
}
